// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portal.Entities;

namespace Portal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190521114250_mgrn0")]
    partial class mgrn0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Portal.Entities.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("RequestId");

                    b.Property<string>("Text");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Portal.Entities.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateFrom");

                    b.Property<DateTime>("DateTo");

                    b.Property<long?>("EmployeeId");

                    b.Property<string>("OptionalEmail");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Portal.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = 3L, Name = "Employee" },
                        new { Id = 1L, Name = "Admin" },
                        new { Id = 2L, Name = "Head" }
                    );
                });

            modelBuilder.Entity("Portal.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Login")
                        .HasMaxLength(120);

                    b.Property<string>("Name")
                        .HasMaxLength(120);

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("Position")
                        .HasMaxLength(120);

                    b.Property<long?>("RequestId");

                    b.Property<long>("RoleId");

                    b.Property<string>("Surname")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("RequestId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1L, Login = "admin", Password = "AQAAAAEAACcQAAAAEFQ35RAmzQNzdQiiHazO2eztGe8ZtgjLP6XjQqUxfjM4FYt4gMEf6xY3gUSzwLFVgQ==", RoleId = 1L }
                    );
                });

            modelBuilder.Entity("Portal.Entities.Comment", b =>
                {
                    b.HasOne("Portal.Entities.Request", "Request")
                        .WithMany("Comments")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Portal.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Portal.Entities.Request", b =>
                {
                    b.HasOne("Portal.Entities.User", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Portal.Entities.User", b =>
                {
                    b.HasOne("Portal.Entities.Request")
                        .WithMany("Heads")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Portal.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
